<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-5.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<security:http pattern="/css/**" security="none" />
	<security:http>
		<security:intercept-url pattern="/top.jsp"
			access="permitAll()" />
		<security:intercept-url pattern="/login.jsp"
			access="permitAll()" />
		<security:intercept-url pattern="/admin/**"
			access="hasAuthority('ROLE_ADMIN')" />
		<security:intercept-url pattern="/**"
			access="isAuthenticated()" />
		<!-- input name에 username이 아닌 id, email등으로 설정을 해두었다면 username-parameter 설정 -->
		<security:form-login 
			login-page="/login.jsp"
			login-processing-url="/processLogin"
			username-parameter="id"
			authentication-success-handler-ref="loginSuccessHandler"
			default-target-url="/top.jsp" />
		<security:logout logout-url="/logout"
			logout-success-url="/top.jsp" />
		<security:access-denied-handler error-page="/accessDenied.jsp"/>
		<security:csrf disabled="true" />
	</security:http>
	<security:authentication-manager>
		<security:authentication-provider>
			<!-- <security:user-service>
				<security:user name="user" password="{noop}1234"
					authorities="ROLE_USER" />
				<security:user name="admin" password="{noop}1234"
					authorities="ROLE_ADMIN" />
			</security:user-service> -->
			<security:jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select id, '{noop}' || password, 1 from users where id = ?" 
				authorities-by-username-query="select id, 'ROLE_' || upper(role) from users where id = ?"/>
		</security:authentication-provider>
	</security:authentication-manager>

</beans>
